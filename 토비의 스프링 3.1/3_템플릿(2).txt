
 템플릿(2)
 232 ~ 277page.



 # 컨텍스트와 DI.

DI 팁.
주입되는 오브젝트와 주입다는 오브젝트 모두 스프링 빈으로 등록돼야 한다.

JDBC DI.
JDBC는 DataSource와 인터페이스 없이 직접 연결해서 사용하는 방식을 사용.
JPA나 하이버네이트 같은 ORM을 사용한다면 인터페이스를 사용해야된다.

코드를 이용하는 수동 DI.
DAO에서 직접 DI를 적용하는 방법.
싱글톤 방법이 아닌 DAO 개수만큼 JDBC 클래스가 생성된다.
JDBC가 빈으로 등록되어있지 않기 때문에 DAO에 DataSource를 DI하고 간접적으로 사용.



 # 템플릿과 콜백.

용어 설명.
템플릿 : 어떤 목적을 위해 미리 만들어둔 모양이 있는 틀.
콜백 : 실행되는 것을 목적으로 다른 오브젝트의 메소드에 전달되는 오브젝트. ( functional object )

템플릿 콜백 패턴의 특징.
콜백은 보통 단일 메소드 인터페이스를 사용한다. 
여러 가지 전략을 사용해야 한다면 하나 이상의 콜백 오브젝트를 사용할 수 있다.
콜백은 일반적으로 하나의 메소드를 가진 인터페이스를 구현한 익명 내부 클래스이다.

템플릿 콜백 API 이름.
클래스 이름이 Template, Callback으로 끝나면 보통 템플릿/콜백 패턴이 적용된 것이다.






