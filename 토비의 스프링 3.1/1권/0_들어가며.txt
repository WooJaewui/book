
 들어가며.
 41 ~ 48page.


 # 스프링이란 무엇인가 ?

스프링.
자바 엔터프라이즈 애플리케이션 개발에 사용되는 애플리케이션 프레임워크다.
애플리케이션 개발을 빠르고 효율적으로 할 수 있도록 틀, 모델, API 등을 제공한다.

애플리케이션 기본 틀 - 스프링 컨테이너.
스프링 컨테이너, 애플리케이션 컨텍스트라고 불리는 스프링 런타임 엔진을 제공한다.
애플리케이션을 구성하는 오브젝트를 생성하고 관리한다.
스프링 컨테이너는 보통 웹 모듈에서 동작하는 서비스나 서블릿으로 등록해서 사용한다.

공통 프로그래밍 모델 - IoC / DI, 서비스 추상화, AOP.
애플리케이션 코드가 어떻게 작성돼야 하는지에 대한 틀 "프로그래밍 모델"을 제시한다.
1. IoC / DI라고 불리는 오브젝트의 생성주기와 의존관계에 대한 프로그래밍 모델.
2. 특정 기술에 종속되지 않고 유연한 애플리케이션을 만들 수 있는 "서비스 추상화"
3. 코드에 산재해서 나타나는 부가적인 기능을 독립적으로 모듈화하는 "AOP"

기술 API.
방대한 양의 기술 API를 제공한다.
스프링의 모든 기술은 자바 표준 엔터프랃이즈 플랫폼 JavaEE에 기반을 두고 있다.



 # 스프링의 성공요인.

단순함 simplicity.
스프링이 지향하는 것은 가장 단순하고 명쾌한 접근 방법이다.
Plain Old Java Object POJO 프로그래밍.

유연성 flexibility.
스프링은 유연성과 확장성이 매우 뛰어나다.
스프링은 스스로 발전하는 프레임워크다.



 # 스프링 학습과 활용의 어려움.

스프링 공부 방법.
스프링의 핵심 가치와 원리에 대한 이해.
스프링의 기술에 대한 지식과 선택 기준 정립.
스프링의 적용과 확장.

스프링의 핵심 가치와 원리에 대한 이해.
가장 중요한 핵심 가치와 그것이 가능하도록 도와주는 세 가지 핵심 기술이 있다.

스프링의 기술에 대한 지식과 선택 기준 정립.
스프링이 제공하는 기술의 종류와 접근 방법에는 어떤 것이 있는지 충분히 살펴본다.
선택의 기준을 마련해서 상황에 맞는 최선의 기술과 접근 방법을 선택할 수 있어야 한다.

스프링의 적용과 확장.
다양한 기술을 어떻게 실제 애플리케이션 개발에 적용해야 하는지 공부해야 한다.



 # 스프링의 이해와 원리의 구성과 예제.

구성.
Vol.1 - 핵심 가치와 원리에 대한 이해.
Vol.2 - 스프링 기술에 대한 지식과 선택.



 # 스프링 3.0의 달라진 기능.

새로운 기능과 특징.
Java 5와 JavaEE 6.
스프링 표현식 언어 SPEL.
자바 코드를 이용한 DI 설정과 DIJ.
Object-XML Mapping OXM.
@MVC와 REST.
내장형 DB지원 - Derby, HSQL, H2.
Converter, ConversionService, Formatter.



 # 스프링 3.1에 추가된 새로운 기능.

새로운 기능과 특징.
강화된 자바 코드를 이용한 빈 설정 - 어노테이션.
런타임 환경 추상화.
JPA 지원 확장과 하이버넹이트 4지원.
새로운 DispatcherServlet 전략과 플래시 맵.
캐시 추상화.











