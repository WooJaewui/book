
 HTTP 메시지.
 49 ~ 84page.



 # 메시지의 흐름.

HTTP 메시지.
HTTP 애플리케이션 간에 주고받은 데이터의 블록들이다.
클라이언트, 서버, 프록시 사이를 흐른다.
인바운드, 아웃바운드, 업스트림, 다운스트림은 메시지의 방향을 의미하는 용어이다.

인바운드 & 아웃바운드.
인바운드 : 메시지가 서버로 방향으로 이동하는 것.
아웃바운드 : 메시지가 클라이언트로 방향으로 이동하는 것.

업스트림, 다운스트림.
모든 메시지는 다운스트림으로 흐른다.



 # 메시지의 각 부분.

메시지 문법.
모든 HTTP 메시지는 요청 메시지나 응답 메시지로 분류된다.
요청 메시지 : 웹 서버에 어떤 동작을 요구.
응답 메시지 : 요청의 결과를 클라이언트에게 돌려준다.

요청 메시지 형식.
<메소드><요청 URL><버전>
<헤더>
<본문>

응답 메시지 형식.
<버전><상태 코드><사유 구절>
<헤더>
<본문>

시작줄.
모든 HTTP 메시지가 시작하는 부분.
요청줄 : 서버에서 어떤 동작이 일어나야 하는지 설명해준다.
응답줄 : 서버에서 수행한 결과( 상태 )를 알려준다.

본문.
HTTP 메시지에 이미지, 비디오, 문서 등을 저장할 수 있는 부분이다.



 # 메소드.

GET.
서버에게 리소스를 달라고 요청하기 위해 쓰인다.

HEAD.
GET처럼 행동하지만, 응답으로 헤더만 돌려준다.
본문이 내용이 없다.

PUT.
서버에 문서를 작성한다.
컨텐츠를 변경할 수 있게 해주기 때문에 아이디 비밀번호를 입력하게 한다.

POST.
서버에 입력 데이터를 전송하기 위해 설계되었다.

TRACE.
클라이언트에게 자신의 요청이 서버에 도달했을 때 어떻게 보이게 되는지 알려준다.

OPTIONS.
서버에게 여러 가지 종류의 지원 범위에 대해 물어본다.
특정 리소스에 대해 어떤 메소드가 지원되는지 확인할 수 있다.

DELETE.
서버에게 리소스를 삭제를 요청한다.

확장 메소드.
HTTP 명세에 정의되지 않은 메소드를 의미한다.



 # 상태 코드.

정보성 상태 코드 - 100번대.
100-continue : 클라이언트에게 추가적인 요청을 받아야하는 경우. ( Expect 헤더 사용 )

성공 상태 코드 - 200번대.
200 OK : 요청 정상 처리.
201 Created : 어떠한 객체를 생성한 경우. ( Method PUT과 관련 )
202 Accepted : 요청은 받아들여졌으나 서버는 아직 동작을 수행하지 않았다. ( 요청이 적합해 보임 )
204 No Content : 응답 메시지에 본문을 포함시키지 않는다.
205 Reset Content : 현재 페이지에 있는 폼에 채워진 값을 비우라고 말한다.
206 Partial Content : 부분 혹은 범위 요청이 성공.

리다이렉션 상태 코드 - 300번대.
300 Multiple Choices : 동시에 여러 리소스를 가리키는 URL을 요청한 경우.
301 Moved Permanently : 요청한 URL이 옮겨졌을 때 사용한다.
302 Found : 301 상태 코드와 같다. 
303 See Other : 클라이언트에게 리소스를 다른 URL에서 가져와야 한다고 말해줄 때 쓰인다.
304 Not Modified : 조건부 요청을 사용할 때 쓰인다.
305 Use Proxy : 리소스가 반드시 프락시를 통해서 접근되어야 함을 나타낼 때 쓰인다.
307 Temporary Redirect : 301 상태 코드와 비슷하다.

클라이언트 에러 상태 코드 - 400번대.
400 Bad Request : 클라이언트가 잘못된 요청을 보냈다고 말해준다.
401 Unauthorized : 클라이언트에게 인증하라고 알려준다.
402 Payment Required : 결제 필요( 사용하지 않음 )
403 Forbidden : 서버에 의해 요청이 거부되었음을 의미.
404 Not Found : 요청한 URL을 찾을 수 없음.
405 Method Not Allowed : URL에서 지원하지 않는 메소드를 요청받았을 경우.
406 Not Acceptable : 클라이언트가 받을 수 없는 응답 결과가 발생한 경우.
407 Proxy Authen... : 401과 같으나 인증을 프록시에 해야 되는 경우.
408 Request Timeout : 시간이 너무 많이 걸리는 경우.
409 Conflict : 요청에 의해 충돌이 발생하는 경우.
410 Gone : 과거에는 있었으나 현재는 삭제된 리소스가 있는 경우.
411 Length Required : Content-Length가 존재해야 하는 경우.
412 Precondition Failed : 클라이언트의 조건부 요청에 실패한 경우.
413 Request Entity ... : 너무 큰 요청을 보냈을 경우.
414 Request URI ... : URL이 너무 긴 경우.
415 Unsupported Media Type : 서버가 이해하지 못하는 유형의 본문을 보낸경우.
416 Requested Range ... : 리소스의 범위가 잘못된 경우.
417 Expecation Failed : Expect가 잘못된 경우.

서버 에러 상태 코드 - 500번대.
500 Internal Server Error : 서버가 요청을 할 수 없는 경우.
501 Not Implemented : 서버의 능력을 넘은 요청을 한 경우.
502 Bad Gateway : 게이트웨이 접속이 불가능할 때.
503 Service Unavailable : 현재는 서버가 응답할 수 없지만 나중에는 가능한 경우.
504 Gateway Timeout : 타임아웃이 발생한 게이트웨이나 프락시에서 온 응답.
505 HTTP Version Not Supported : 지원하지 않는 프로토콜 요청을 받았을 때.



 # 헤더.

일반 헤더 General Headers.
클라리언트와 서버 모두 사용하는 다양한 목적을 가진 헤더.
Connetion : 요청/응답 연결에 대한 옵션 설정.
Date : 메시지 생성 시기를 제공.
MIME-Version : MIME의 버전.
Transfer-Encoding : 메시지에 어떤 인코딩이 적용되었는지 말해준다.
Upgrade : 업그레이드 하길 원하는 새 버전이나 프로토콜을 알려줌.
Via : 어떤 중개자를 거쳐 왔는비 보여준다.

요청 헤더 Request Headers.
요청 메시지를 위한 헤더.
서버에게 클라이언트가 받고자 하는 데이터의 대한 추가 정보 제공.
Client-IP : 클라이언트 IP 제공.
From : 클라이언트 메일 주소.
Host : 서버의 호스트 명과 포트.
Referer : 현재 요청 URI가 들어있었던 문서의 URL을 제공.
Expect : 클라이언트가 요청에 필요한 서버의 행동을 열거함.
Authorization : 클라이언트가 서버에게 제공하는 인증 정보.

응답 헤더 Response Headers.
응답 메시지를 위한 헤더.
Age : 응답이 얼마나 오래되었는지.
Retry-After : 현재 리소스가 사용 불가능할 때, 가능해지는 시간.
Server : 서버 애플리케이션의 이름과 버전.
Set-Cookie : 서버가 클라이언트를 인증할 수 있도록 클라이언트 측에 토큰을 설정.

엔티티 헤더 Entity Headers.
본문에 대한 헤더.
본문에 들어있는 데이터의 타입 등의 정보를 알려준다.
Allow : 이 엔티티에서 수행될 수 있는 요청 메소드들을 나열한다.
Location : 엔티티가 실제로 어디에 위치하고 있는지 말해준다.

컨텐츠 헤더.
엔티티의 컨텐츠에 대한 구체적인 정보를 제공한다.
Content-Base : 상대 URL을 사용하기 위한 현재 URL.
Content-Encoding : 본문에 적용된 인코딩 방식.
Content-Language : 본문을 이해하기 위한 자연어.
Content-Length : 본문의 길이 또는 크기.
Content-Location : 리소스가 실제로 어디에 위치하는지.
Content-Type : 이 본문이 어떤 종류의 객체인지.

확장 헤더 Extension Headers.
HTTP 명세에 추가되지 않은 비표준 헤더.






