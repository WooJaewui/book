
 엔티티와 인코딩.
 393 ~ 426page.



 # 메시지는 컨테이너, 엔티티는 화물.

엔티티 헤더 필드.
Content-Type : 엔티티에 의해 전달된 객체의 종류.
Content-Length : 전달되는 메시지의 길이나 크기.
Content-Language : 전달되는 객체와 가장 잘 대응되는 자연어.
Content-Encoding : 객체 데이터에 대해 행해진 변형.
Content-Location : 요청 시점을 기준으로, 객체의 또 다른 위치.
Content-Range : 만약 이 엔티티가 부분 엔티티라면, 전체에서 어느 부분에 해당하는지.
Content-MD5 : 엔티티 본문의 컨텐츠에 대한 체크섬.
Last-Modified : 서버에서 이 컨텐츠가 생성 혹은 수정된 날.
Expires : 엔티티 데이터가 더 이상 신선하지 않은 것으로 간주되기 시작하는 날짜와 시각.
Allow : 이 리소스에 대해 어떤 요청 메소드가 허용되는지.
Cache-Control : 어떻게 이 문서가 캐시될 수 있는지에 대한 지시자.

엔티티 헤더.
엔티티 본문 데이터에 대한 설명이 있다.
엔티티 헤더와 엔티티 본문은 CRLF로 구분된다.

엔티티 본문.
가공되지 않은 데이터가 담겨져 있다.



 # Content-Length : 엔티티의 길이.

Content-Length.
엔티티 본문의 크기를 바이트 단위로 나타낸다.

잘못된 Content-Length.
Content-Length가 잘못된 값을 담고 있을 경우 아예 없는 것보다도 큰 피해를 유발할 수 있다.
HTTP / 1.1 에이전트는 잘못된 길이를 파악했을 때 사용자에게 알려주게 되어 있다.

Content-Length와 지속 커넥션.
Content-Length는 지속 커넥션을 위해 필수이다.
연속적으로 메시지가 오는 경우 어디서 끝나고 다음 시작은 어디인지 알려준다.

엔티티 본문 길이 판별을 위한 규칙.
Content-Length를 바꿀만한 헤더들이 포함되어 있다면 Content-Length가 무시된다.
본문을 허용하지 않은 HTTP 메시지에서는 Content-Length가 무시된다.



 # 미디어 타입과 Charset.

흔히 쓰는 MIME 타입.
text/html : 엔티티 본문 HTML 문서.
text/plain : 엔티티 본문 플레인 텍스트 문서.
image/gif : 엔티티 본문 GIF 이미지.
image/jpred : 엔티티 본문 JPEG 이미지.
audio/x-wav : 엔티티 본문 wav 음향 데이터.
...

헤더 작성.
Content-Type : text/html ; charset=UTF-8

멀티파트 폼 제출.
HTTP 폼을 채워서 제출하면 여러가지 형태의 객체들이 하나의 파트가 되어 보내진다.

멀티파트 범위 응답.
범위 요청에 대한 HTTP 응답 또한 멀티파트가 될 수 있다.



 # 컨텐츠 인코딩.

컨텐츠 인코딩 과정.
웹 서버가 응답 메시지를 생성한다.
컨텐츠 인코딩 서버가 인코딩된 메시지를 생성한다. 
수신 측 프로그램은 인코딩된 메시지를 받아서 디코딩하고 원본을 얻는다.

컨텐츠 인코딩 유형.
gzip : GNU zip 인코딩이 적용되었음을 의미한다.
compress : 유닉스 파일 압축 프로그램인 compress가 실행되었음을 의미한다.
deflate : zlib 포맷으로 압축되었음을 의미한다.
identity : 어떤 인코딩도 수행되지 않았음을 의미한다.

Accept-Encoding 헤더.
클라이언트는 자신이 지원하는 인코딩의 목록을 Accept-Encoding헤더로 표시한다.



 # 전송 인코딩과 청크 인코딩.

Transfer-Encoding 헤더.
안전한 전송을 위해 어떤 인코딩이 메시지에 적용되었는지 수신자에게 알려준다.

TE 헤더.
어떤 확장된 전송 인코딩을 사용할 수 있는지 서버에게 알려주기 위해 요청 헤더에 사용한다.

청크 인코딩.
메시지를 일정 크기의 청크 여럿으로 쪼갠다.
서버는 각 청크를 순차적으로 보낸다.

청크와 지속 커넥션.
크기가 0인 청크로 본문이 끝났음을 알린다.

전송 인코딩 규칙.
전송 인코딩의 집합은 반드시 chunked를 포함해야 한다.
청크 전송 인코딩은 반드시 메시지 본문에 한 번 이상 적용되어야 한다.



 # 검사기와 신선도.

신선도.
Expires와 Cache-Control 헤더를 통해 캐시 사본 데이터가 신선한지 판단한다.

조건부 요청과 검사기.
서버의 리소스와 캐시에 저장된 사본이 다를 경우에만 서버에게 리소스를 요청한다.
If-Modified-Since.

Range 헤더.
범위 요청을 사용하는 방법으로 원하는 범위를 설정하여 원하는 부분의 응답을 받을 수 있다.



 # 델타 인코딩.

델타 인코딩.
객체 전체가 아닌 변경된 부분에 대해서만 통신하여 전송하는 HTTP 프로토콜의 확장이다.

A_IM 헤더.
클라이언트는 자신이 받아들일 수 있는 인스턴스 조작의 종류를 명시할 수 있다.

ETag 헤더.
문서의 각 인스턴스에 대한 유일한 식별자.






