
 웹 서버.
 125 ~ 146page.



 # 다채로운 웹 서버.

다목적 소프트웨어 웹 서버.
네트워크에 연결된 표준 컴퓨터 시스템에서 동작한다.

임베디드 웹 서버.
제품에 내장될 목적으로 만들어진 작은 웹 서버.



 # 1단계 - 클라이언트 커넥션 수락.

새 커넥션 다루기.
클라이언트가 워ㅔㅂ 서버에 TCP 커넥션을 요청하면 수락한다.
TCP 커넥션에서 IP 주소를 추출하여 커넥션 맺은 클라이언트의 위치를 확인한다.
클라이언트의 IP 주소나 호스트 명이 인가되지 않았거나 악의적인 경우 커넥션을 닫는다.

클라이언트 호스트 명 식별.
웹 서버는 클라이언트 호스트 명을 구체적인 접근 제어와 로깅을 위해 사용할 수 있다.

ident를 통해 클라이언트 사용자 알아내기.
ident 프로토콜은 서버에게 어떤 사용자 이름이 HTTP 커넥션을 초기화했는지 알려준다.
이 정보는 웹 서버 로깅에서 유용하다.
클라이언트가 ident 프로토콜을 지원하면 결과를 위해 113번을 listen한다.



 # 2단계 - 요청 메시지 수신.

메시지의 내부 표현.
몇몇 웹 서버는 요청 메시지를 쉽게 다룰 수 있도록 내부의 자료 구조에 저장한다.

커넥션 입력/출력 처리 아키텍처.
고성능 웹 서버는 수천 개의 커넥션을 동시에 열 수 있도록 지원한다.



 # 3단계 - 요청 처리.

요청 처리.
웹 서버가 요청을 받으면, 서버는 요청으로부터 로직을 수행해여 처리한다.
웹 이외의 내용이 대부분이기 때문에 이 책에서 다루진 않는다.



 # 4단계 - 리소스의 매핑과 접근.

Docroot.
웹 서버 파일 시스템의 특별한 폴더를 웹 컨텐츠를 위해 예약해 두는 방식이다.
docroot 폴더를 기준으로 /docroot폴더명/resource명 으로 사용한다.

가상 호스팅된 docroot.
한 웹 서버에서 여러 개의 웹 사이트를 호스팅 한다.
docroot가 여러개 있는 경우를 의미한다.
/docroot폴더1/resouce명 과 /docroot폴더2/resouce명 으로 하나의 resouce를 접근할 수 있다.

사용자 홈 디렉토리 docroots.
한대의 웹 서버에서 사용자들 개인의 웹 사이트를 만들 수 있도록 해주는 것.

디렉토리 URL 요청 웹 서버 반응.
1. 에러를 반환한다.
2. 디렉토리 대신 특별한 index.html 파일을 반환한다. 
3. 디렉토리를 탐색해서 그 내용을 담은 HTML 페이지를 반환한다. ( DirectoryIndex 설정 파일 반환 )

동적 컨텐츠 리소스 매핑.
대부분의 웹 서버는 URI를 동적 리소스에 매핑할 수 있다.

서버사이드 인클루드 SSI Server-Side Includes.
서버가 리소스의 컨텐츠를 클라이언트에게 보내기 전에 처리한다.

접근 제어.
각각의 리소스에 접근 제어를 할당할 수 있다.
IP 주소를 통해 접근할 수 없게 하거나, 비밀번호를 물어볼 수 있다.



 # 5단계 - 응답 만들기.

응답 엔티티.
트랜잭션이 응답 본문을 생성한다면, 그 내용을 응답 메시지와 함께 돌려보낸다.

MIME 타입 결정하기.
웹 서버는 응답 본문의 MIME 타입을 결정해야 하는 책임이 있다.
mime.types : MIME 타입을 확장자로 나타내는 방법.
매직 타이밍 magic typing : 파일의 내용을 검사해서 확인하는 방법.
유형 명시 Explicit typing : 웹 서버에서 MIME 타입을 설정하는 방법.
유형 협상 Type negotiation : 웹 서버가 사용자와의 협상 과정을 통해 결정하는 방법.

리다이렉션.
리소스 URL이 옮겨진 경우 사용할 수 있다.
과부하된 서버가 요청을 받으면, 다른 서버로 리다이렉트 할 수 있다.



 # 6단계 - 응답 보내기.

커넥션 상태 확인.
연결된 커넥션의 상태를 지속적으로 확인하여 응답 메시지를 전송한다.
비지속적인 커넥션이라면 모든 메시지를 전송 후 서버쪽 커넥션을 닫는다.



 # 7단계 - 로깅.

로깅.
트랜잭션이 어떻게 수행되었는지에 대한 로그를 로그파일에 기록한다.





