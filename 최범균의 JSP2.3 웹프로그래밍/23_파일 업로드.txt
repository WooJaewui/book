
 파일 업로드.



 # 파일 전송 방식.

웹 브라우저 데이터 전송.
<form ~~~ method="post" enctype="multipart/form-data">
	<input ~~~~~ >
</form>

encytype 속성.
"application/x-www-form-urlencoded" : 기본값.
"multipart/form-data" : 파일을 업로드하기 위한 방식.



 # 서블릿 3 파일 업로드 구현.

필요 기능.
HttpServletRequest의 getPart( ) 메소드를 이용해서 업로드 데이터 접근.
서블릿이 multipart 데이터를 처리할 수 있도록 설정. ( 어노테이션, web.xml )

getPart( ) 설명.
multipart/form-date 형식으로 전송된 데이터는 getParameter( ) 메소드로 접근할 수 없다.
Part 인터페이스를 통해 데이터에 접근할 수 있다.
request.getContentType( )을 통해 enctype을 확인하고, getPart( )를 통해 Part를 구해서 사용.

실행 과정.
getContentType( )으로 enctype이 "multipart/form-data"가 맞는지 확인.
맞다면 request.getParts( )를 통해 Collection<Part>에 값을 리턴하고.
for( Part p : parts )를 통해 p.getHeader Content-Disposition의 값에 filename이 있는지 확인.
위에 경과가 맞다면 파일이 맞음으로 p.getSize( ) > 0면 p.write( fileName )을 통해 파일 복사. ( 업로드 )

사용.
String contentType = request.getContentType( ) ;
if( contentType != null && contentyType.toLowerCase( ).startWith( "multipart/" ) ) {
	Collection<Part> parts = request.getParts( );
	for( Part p : parts ) {
		if( p.getHeader( "Content-Disposition" ).contains( "filename=" ) ) {
			if( p.getSize( ) > 0 ) { 
				String fileName = p.getSubmittedFileName( ) ;
				p.write( fileName ) ;
				p.delete( ) ;
			}
		} else {
			String value = part.getParameter( part.getName( ) ) ;
		}
	}
}

Part 메소드.
getSize( ) : 업로드한 파일의 크기를 구한다. ( 0보다 크면 업로드한 파일이 존재한다는 뜻 )
getSubmittedFileName( ) : 업로드한 파일의 이름을 구한다. 
write( fileName ) : Part의 업로드 데이터를 filenam이 지정한 파일에 복사한다.
delete( ) : Part와 관련된 파일을 삭제한다.
getHeader( "name" ) : 해당 Part에서 지정한 "name"의 헤더 값을 구한다.



 # 파일 업로드 처리 web.xml 설정.

xml 설정.
<servlet>
	<servlet-name>변수이름</servlet-name>
	<servlet-class>패키지이름.클래스이름</servlet-class>
	<multipart-config>
		<location>저장위치</location>
		<max-file-size>-1</max-file-size>		
		<max-request-size>-1</max-request-size>
		<file-size-threshold>1024</file-size-threshold>
	</multipart-config>	
</servlet>

속성 설명.
<location> : 업로드한 파일이 임시로 저장될 위치를 지정한다.
<max-file-size> : 업로드 가능한 파일의 최대 크기를 바이트 단위로 지정한다. ( -1 제한 없음 )
<max-request-size> : 전체 Multipart 요청 데이터의 최대 제한 크기를 바이트 단위로 지정. ( -1 제한 없음 )
<file-size-threshold> : 업로드한 파일의 크기가 이 태그의 값보다 크면 <location>에 지정한 디렉토리에 파일 생성.
	                업로드 파일 크기가 작으면 메모리에 파일 데이터를 보관한다. ( 단위 바이트, 기본값 0 )


 
 # @MultipartConfig 설정.

어노테이션 설정.
@MultipartConfig( 
	location = "저장위치",
	maxFileSize = -1,
	maxRequestSize = -1,
	fileSizeThreshold = -1
)



