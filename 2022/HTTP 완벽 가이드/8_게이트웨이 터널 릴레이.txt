
 게이트웨이 & 터널 & 릴레이.
 227 ~ 246page.



 # 게이트웨이.

게이트웨이.
서로 다른 프로토콜과 애플리케이션 간의 HTTP 인터페이스이다.

게이트웨이의 필요성.
웹이 복잡해지면서 모든 리소스를 한 개의 애플리케이션으로만 처리할 수 없게 되었다.

클라이언트 측 게이트웨이와 서버 측 게이트웨이.
'클라이언트/서버' 와 같이 빗금을 통해 게이트웨이를 구분한다.
예 : HTTPS/HTTP.



 # 프로토콜 게이트웨이.

HTTP / FTP : 서버 측 웹 게이트웨이 역할.
USER와 PASS 명령을 보내서 서버에 로그인한다.
서버에서 적절한 디렉토리로 변경하기 위해 CWD 명령을 내린다.
다운로드 형식을 ASCII로 설정한다.
MDTM으로 문서의 최근 수정 시간을 가져온다.
PASV로 서버에게 수동형 데이터 검색을 하겠다고 말한다.
RETR로 객체를 검색한다.
제어 채널에서 반환된 포트로 FTP 서버에 데이터 커넥션을 맺는다.

HTTP / HTTPS : 서버 측 보안 게이트웨이.
기업 내부의 모든 웹 요청을 암호화함으로써 개인 정보 보호와 보안을 제공하는 데 사용할 수 있다.
게이트웨이는 자동으로 사용자의 모든 세션을 암호화할 것이다.

HTTPS / HTTP : 클라이언 측 보안 가속 게이트웨이.
보안 HTTPS 트래픽을 받아서 복호화하고, 웹 서버로 보낼 일반 HTTP 요청을 만든다.
게이트웨이와 원 서버 간에 있는 네트워크가 안전한지 확인을 확실히 하고 사용해야 한다.



 # 리소스 게이트웨이.

CGI Common Gateway Interface.
최초의 서버 확장이며 널리 사용되는 API이다.



 # 터널.

터널.
HTTP 프로토콜을 지원하지 않는 애플리케이션에 HTTP 애플리케이션을 사용해 접근하는 방법.

CONNECT로 HTTP 터널 커넥션 맺기.
CONNECT 요청 : CONNECT URI.
CONNECT 응답 : Connection Established , 200 OK.

데이터 터널링.
터널을 통해 전달되는 데이터는 게이트웨이에서 볼 수 없다.
터널이 연결되면 데이터는 언제 어디로든 흘러갈수 있다.



 # 릴레이.

릴레이.
HTTP 명세를 완전히 준수하지는 않는 간단한 HTTP 프락시다.
모든 헤더와 메소드 로직을 수행하지 않고 트래픽을 전달하는 간단한 프락시를 구현할 때 사용.



