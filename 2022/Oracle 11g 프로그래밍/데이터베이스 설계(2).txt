
 데이터베이스(2) - 마무리.


 # ERwin.

표기방법 2가지.
Indeflx ( Integration DEFinition for Information Modeling ) : 미 국방성 프로젝트 표준안.
IE ( Information Engineering ) : 정보 공학 표기 방식 - 까마귀발 표기법.



 # 논리적 모델링.

N : M 관계.
N : M의 cardinality를 가진 엔티티는 물리적 모델링을 할 수 없다. ( 논리적 모델링에서 관계 해소 )
N : M의 cardinality를 가진 엔티티들 사이에 새로운 엔티티를 생성해 관계를 해소시켜줘야된다.

관계 해소 엔티티 생성.
관계 해소를 위해 생성된 엔티티는 N, M 엔티티의 두 개의 기본키를 복합키로 사용할 수 있다. 
또 다른 방식은 N, M의 두 개의 기본키를 외래키로 받고, 본인의 엔티티에 새로운 기본키를 생성한다.



 # 물리적 모델링.

설명.
논리적 모델리에서 만들어진 엔티티, 속성이 테이블, 칼럼으로 바뀐다.
데이터 타입, 사이즈, 제약조건 등 세부사항을 설정해준다.



 # 데이터 베이스.

설명.
물리적 데이터 모델링 단계를 거쳐 정의된 내용을 실제 데이터베이스 스키마로 만든다.

설정.
Database -> Database Connection -> User Name, Password, DatabaseName을 설정.

사용.
데이터베이스 설정이 완료되면 실제 데이터베이스가 완성이 됨으로 SQL 문을 사용할 수 있다.
앞에서 배운 SQL문, 시퀀스, 뷰, 제약조건 등을 활용해서 데이터베이스를 활용.

























