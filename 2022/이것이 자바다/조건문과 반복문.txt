
조건문과 반복문.


 # 제어문

위에서부터 아래로 진행되는 실행 흐름을 개발자가 원하는 방향으로 바꿔 줄 수 있도록 해주는 것이다.

1. 조건문
 
 1 - 1 : if문.
 1 - 2 : switch문. 

2. 반복문.

 2 - 1 : for문.
 2 - 2 : while문.
 2 - 3 : do - while문.

looping : 반복적으로 실행되는 것을 의미한다.


 # if문.

if ( boolean1 ) { boolean1이 true일 때 실행할 문장 } 
else if ( boolean2 ) { boolean2가 true일 때 실행할 문장 }
else { 모든 boolean이 false일 때 실행할 문장 } 

else if는 내가 원하는 만큼 만들 수 있다. 
실행해야 할 문장이 하나라면 '{ }'를 생략할 수 있다. ( 가독성을 해칠 수 있고, 버그가 발생할 수 있다 )
중첩 if문을 사용하려면 '{ }'를 잘 확인하자!!


 # Math.random( ).

Math class의 random method( )로써 0<= x < 1 사이의 값이 float로 랜덤으로 나온다.
* 와 + 연산을 활용해서 다양하게 랜덤값을 얻을 수 있다.


 # switch문.

switch( 변수 ) {
   case 'A' :
              변수가 'A'일때 실행할 문장;
              break;
    ...

   case 'N' :
              변수가 'N'일때 실행할 문장;
              break;
   default : 
              위에 case중에 변수의 값이 없을때 실행할 문장;
}

break는 사용하지 않아도 상관없다. ( 사용하지 않을경우 break가 나올때까지 순서대로 switch문을 진행한다 )
변수로는 정수 type 뿐만 아니라 String type도 올 수 있다. ( 실수 type은 변수로 올 수 없다 )


 # for문.

for( 초기화식; 조건식; 증감식 ) { 반복할 문장; } 

조건식이 false가 될때까지 반복된다.
초기화식은 for문에서 사용할 지역변수를 초기화하는 부분이다. ( 보통 조건식, 증감식에서 사용할 변수를 초기화한다 )
초기화식과 조건식은 둘 이상이 있을 수 있다. ' , ' 로 구분해서 사용한다.
초기화식은 꼭 필요한 경우가 아니면 실수는 사용하지 않는 것이 좋다. ( 정확한 값이 나오기 힘들다 )
조건식을 생략하면 true로 간주해서 무한반복된다. 
for문 안에 for문은 생각보다 까다롭다. ( * 찍기 예제를 통해 수련한다 )


 # while문.

while( boolean ) { true일때 반복할 문장; } 

조건식이 true가 될때까지 반복한다. ( 무한 반복 주의 )

System.in.read( ) : 하나의 키 코드만 읽는 것.
Scanner.nextLint( ) : 한 줄의 코드를 읽는 것.


 # do - while문.

do { 반복할 문장 } while ( boolean );

무조건 1번은 반복해야 하는 경우에 사용하는 반복문이다. ( 문장을 먼저 쓰기 때문에 무조건 1번은 실행된다 )
boolean의 값이 true이면 do로 돌아와서 문장을 반복한다.


 # break문.

Outter : for ( ~~~~~ ) { 
                반복할문장;
                break Ouuter;
 }

'{ }' 블럭 안에 있는 실행을 종료시킨다.
break 이름; 이름을 통해 { } 밖에 있는 문장들도 종료시킬 수 있다.


 # continue문.

'{ }' 블럭 안에 있는 실행을 중단하고, 다시 처음부터 시작한다. ( break와의 차이점 꼭 알아두기 )
















