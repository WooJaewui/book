
 인터페이스(2) - 389page.


 # 강제 타입 변환 casting.

원리.
인터페이스 참조변수에 객체를 대입하면 인터페이스에 있는 멤버들만 사용할 수 있다.
인터페이스에는 없고 객체에만 있는 멤버를 사용하려면 강제타입변환을 해야된다.

객체 생성.
Interface in = new Class( );

Casting.
Class c = (Class)in;


 # instancof 연산자.

원리.
강제 타입 변환을 하기 전에 변수가 그 타입으로 형변환이 가능한지 확인해보는 연산자이다.

객체 생성.
Interface in = new Class( );

사용.
in instanceof Class.

팁.
강제 타입 변환을 사용하기 전엔 항상 instanceof연산자를 통해 타입 변환이 가능한지 확인하는 것이 좋다.
( Exception 발생을 줄일 수 있다 )



 # 인터페이스 다중 상속.

원리.
인터페이스는 클래스와 달리 부모가 여러개인 다중상속이 가능하다.

사용.
public interface ChildInterface extends ParentInterface1, ParentInterface2, ... { ... }

팁.
자식 인터페이스를 구현하는 클래스는 
자식 인터페이스의 추상메소드 + 부모 인터페이스 추상메소드까지 구현해야된다.
상위 인터페이스 참조변수에 하위 인터페이스를 구현하는 인스턴스를 대입할 수 있다.

주의사항.
interface를 class에 상속하는 implements도 여러개 가능하고,
interface끼리 상속하는 extends에도 여러개 가능하다.


 # 인터페이스 디폴트 메소드.

자식메소드에서 꼭 구현하지 않아도 사용할 수 있는 default값을 가진 메소드이다.
재정를 하면 자식클래스의 메소드를 사용하고, 하지 않으면 인터페이스에서 구현한대로 사용한다.
( 인터페이스에 모든 메소드가 추상메소드일 때 모든 메소드를 구현해야 하는 일이 힘들어서 생김 )


 # 인터페이스의 스태틱 메소드.

사용.
InterfaceName.method( );

팁.
인터페이스 참조변수를 통해 자식클래스 객체를 생성해서 사용하면 찾을 수 없다.
interface.method( )으로만 사용이 가능하다. 
































