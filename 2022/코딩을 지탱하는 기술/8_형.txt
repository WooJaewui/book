
 형.
 108 ~ 140page.



 # 수치를 On과 Off로 표현하는 방법.

형이란 ?
데이터에 '어떤 종류의 값인가'라는 정보를 추가한 것이 형의 시작이다.

자릿수 발명.
10개의 램프로 한 자릿수를 표현하는 방식.
567이라는 숫자를 표현하기 위해 100에 자리에 5, 10의 자리에 6, 1의 자리에 7이라고 약속.

7 세그먼트 디스플레이.
7개의 램프로 한 자릿수를 표현하는 방식이다.

주판.
5개로 하나의 자리를 표현하는 방식이다.
구슬이 아래에 있는지 위에 있는지에 따라 값을 표현한다.



 # 한 자리에 필요한 램프는 몇 개일까 ?

램프.
하나의 램프로 2가지 부호를 표현할 수 있다. ( 0 , 1 )

10진수에서 2진수로.
10진수를 사용하면 램프로 표현할 때 빈 공간이 생성된다. ( 램프는 2 ** n )
낭비없는 공간을 사용하기 위해서는 2진수를 사용하는 것이 좋다.
처음 정수를 표현하기 위해 8비트( 8램프 ) 0~255까지 숫자를 표현했다.
최근에는 32비트 64비트의 수를 표현한다.

8진수와 16진수.
2진수로 표현하면 너무 길어서 사람이 인식하기 어렵기 때문에 8진수 16진수를 사용해 끊어서 읽는다.
8진수 - 3개의 램프( 2 * 2 * 2 )로 묶어서 표현 ( 000, 111, 101, ... )
16진수 - 4개의 램프( 2 * 2 * 2 * 2 )로 묶어서 표현 ( 0000, 1111, 1010, ... )



 # 실수는 어떻게 표현할까 ?

고정 소수점.
소수점을 어디에 붙일지 정하는 방법이다.
1 -> 소수점 이하 4자리 소수부 -> 0.0001

부동 소수점.
'어디부터 소수부인가' 라는 정보를 값에 포함하고 있는다.

IEEE 754가 정의하고 있는 부동 소수점 구조.
부호 + 지수부( 정수부분 - 8비트 ) + 가수부( 소수부분 - 23비트 )

문제점.
3 / 10을 10진수로 표현하면 0.3인데, 2진수로 표현하면 0.01001... 으로 무한 소수가 된다.



 # 형은 무엇을 위해 존재할까 ?

형이 없을 때 발생하는 문제.
3.0 과 7.0의 비트 패턴을 정수로 읽어 들이면 형이 없을 때 엄청나게 큰 값이 되어버린다.

초기 FORTRAN의 형.
변수명 선두에 I~N이면 정수, 그 이외이면 부동 소수점이 들어있다는 규칙을 사용.

언어 처리계에 변수 종류를 알린다.
int x, float x , ... 등 변수의 type을 정하는 것.

암묵의 형 승격.
x, y 둘 중 하나가 정수고 다른 한 쪽이 부동 소수점인 경우 부동 소수점으로 암묵적 변환을 시킨다.
문제점 - x가 어떤 형인지 기억해두지 않으면 x / 2라는 코드를 보고 소수점 이하를 버리는지 알 수 없다.



 # 형의 다양한 전개.

사용자 정의형과 객체 지향.
언어가 가지고 있는 기본적인 형을 조합해서 새로운 형을 만드는 기능이 발명됐다.ㄴ
C언어의 구조체, 객체지향언어의 class 등.

공개와 비공개를 나누다.
구조체나 클래스를 구성하는 형을 전부 공개하지 않고 최소한만을 공개. ( public, private )

인터페이스로 발전.
구체적인 구현 방법을 가지고 있지 않는 형이 탄생. ( 인터페이스 )

총칭형, 제네릭스, 템플릿.
구성 요소의 형을 일부만 바꾸는 형.
C++ 템플릿 , Java 제네릭, Haskell의 형 생성자.

동적 형결정.
동적 형결정 - 변수명, 값이 저장된 메모리 위치, 어떤 종류의 값인지를 언어 처리계가 저장.
Python, JS에서 변수형을 선언할 필요가 없으며, 같은 변수에 여러 타입을 저장할 수 있다.

어떻게 표현하고 있을까 ?
Python에서 값은 어떤 타입이든 모두 PyObject 형으로 취급한다.
PyObject형의 구조 안에 값의 종류 정보를 저장할 수 있는 공간이 있다.

동적 형결정 - 장점과 단점.
유연한 처리가 가능.
버그를 찾는데 어려움이 있을 수 있다.

형 추론.
인수 -> 반환값인 경우 인수의 타입을 통해 반환값의 타입을 추론한다.

강한 형으로 버그 없는 프로그램을 만들 수 있는가 ?
강한 형을 통해 컴파일시 오류가 발생하지 않으면 버그가 없는 프로그램을 만들려는 시도가 많다.

정리.
10진수 -> 자릿수 -> 2진수, 8진수, 16진수.
값의 형( 타입 )이 무엇인지 컴퓨터에 저장하기 위해 형이 탄생했다.



