
 객체와 클래스.
 188 ~ 212page.



 # 객체 지향이란 ?

언어마다 다른 객체지향의 의미.
C++ 설계자는 class는 사용자 정의형을 만들기 위한 구조라고 설명한다.
Smalltalk 설계자는 객체가 메세지를 주고 받아서 커뮤니케이션하는 프로그램이다.

객체는 현실 세계의 모형.
현실 세계에 있는 사물의 모형을 컴퓨터 안에 만드는 방법을 객체 지향이라는 개념으로 표현.

클래스란 ?
C++에서 클래스는 사용자가 정의할 수 있는 형이라고 표현. 
Java이외에 다른 언어에서는 클래스는 프로그래밍에 필수 조건은 아니다.
작은 규모의 프로그램은 클래스가 없어도 된다.



 # 변수와 함수를 합쳐서 모형을 만드는 법.

모듈 ( 패키지 )
원래 관련된 함수를 하나로 모아두기 위한 기능이었다.
하나의 모듈안에 변수와 함수를 모두 넣는 방법.

해쉬에 넣는 방법.
함수, 변수를 동일한 해쉬에 넣는 방법.

클로저 Closure.
함수 실행 시의 이름 공간의 변수를 하나로 묶기 위해 사용하는 방법.



 # 방법 1 : 모듈, 패키지.

모듈, 패키지란 무엇인가 ? 
프로그램 안에는 함수나 변수가 대등한 관계로 여기 저기 흩어져있다.
관련성 높은 함수나 변수의 묶음을 그룹으로 지정하여 가독성을 높이기 위해 모듈, 패키지를 만듦.

모듈만으로는 부족하다.
비슷한 사물이 여러개 있다고 생각하면 똑같은 모듈, 패키지가 여러개 존재해야된다.

별도의 데이터 저장소를 만든다.
공통적으로 존재해도 되는 부분과, 별도로 저장해야되는 데이터를 구분하고 따로 관리해야된다.



 # 방법 2 : 함수도 해쉬에 넣는다.

퍼스트 클래스.
변수에 대입하거나, 함수의 인수로 전달 등이 가능한 값을 퍼스트 클래스 값이라고 부른다.

프로토타입.
새로운 객체를 만든다.
만들어진 객체 프로토타입을 함수 x 프로토타입으로 변경한다.
만들어진 객체를 this에 넣어서 함수 x 본체를 실행한다.
해당 객체를 반환한다.



 # 방법 3 : 클로저.

왜 클로저라고 부를까 ? 
함수를 함수 안에 정의하고, 내포할 수 있는 정적 스코프가 있어서 
함수를 반환값으로 사용하거나 변수에 대입하여 사용한다는 개념이다.



 # 방법 4 : 클래스.

Hoare가 생각한 클래스.
1965년 Hoare는 현실 세계의 사물은 편의상 class로 분류될 수 있다고 말했다.
그리고 class를 더욱 세분화된 종류 subclasses로 분류할 수 있으면 편리하다고 주장했다.

C++ 클래스.
C++에서 class는 사용자 정의 타입을 의미한다.

사양으로서 역할.
객체가 어떤 메소드를 갖고 있고, 어떤 메소드를 갖고 있지 않는가 라는 사양 선언 역할도 한다.

클래스의 3가지 역할.
결합체를 만드는 생성기. ( Perl, JavaScript )
어떤 조작이 가능한지에 대한 사양. ( C++, Java - 인터페이스 )
코드를 재사용하는 단위.

정리.
객체 지향은 현실 세계의 사물 모형을 만들기 위해 만들어졌다.
언어마다 객체 지향이 의미하는 바가 조금씩 다르다.






