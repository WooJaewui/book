
 어드바이스 동작 시점.



 # 동작시점.

Before.
Before : 비즈니스 메소드 실행 전 동작.

After.
After Returning : 비즈니스 메소드가 성공적으로 리턴되면 동작.
After Throwing : 비즈니스 메소드 실행 중 예외가 발생하면 동작. ( catch 블록과 비슷하다 )
After : 비즈니스 메소드가 실행된 후, 무조건 실행.

Around.
Around : 메소드 호출 자체를 가로채 비즈니스 메소드 실행 전후에 처리할 로직을 삽입.



 # Before 어드바이스.

설명.
포인트컷 메소드가 실행되기 전에 처리될 내용들을 기술하기 위해 사용.

사용예시.
<aop:aspect ref="어드바이스id">
	<aop:before pointcut-ref="포인트컷id" method="어드바이스메소드" />
</aop:aspect>



 # After Returning 어드바이스.

설명.
포인트컷 메소드가 정상적으로 실행되고 나서 메소드 수행 결과로 생성된 데이터를 리턴하는 시점에 동작.
보통 메소드의 리턴값을 이용하여 연산을 수행하는 로직에 사용한다.

사용.
<aop:aspect ref="어드바이스id">
	<aop:after-returning pointcut-ref="포인트컷id" method="어드바이스메소드" />
</aop:aspect>



 # After Throwing 어드바이스.

설명.
포인트컷 메소드가 예외가 발생했을 때 동작한다. 
보통 예외 처리 어드바이스를 설정할 때 사용한다.

사용.
<aop:aspect ref="어드바이스id">
	<aop:after-throwing pointcut-ref="포인트컷id" method="어드바이스메소드" />
</aop:aspect>



 # After 어드바이스.

설명.
포인트컷 메소드의 실행 여부와 상관없이 메소드가 끝나면 무조건 동작한다.
포인트컷 메소드 실행 중 Exception이 발생하면 어드바이스가 실행 된 후 exceptionLog( ) 실행.

사용.
<aop:aspect ref="어드바이스id" >
	<aop:after pointcut-ref="포인트컷id" method="어드바이스메소드" />
</aop:aspect>



 # Around 어드바이스.

설명.
매개변수로 ProceedingJoinPoint pjp를 입력받아서, 
pjp.proceed( )를 기준으로 before 처리 코드와 after 처리 코드를 실행할 수 있다.

어드바이스 정의.
public class 클래스이름 { 
	public Object 메소드이름( ProceedingJoinPoint pjp ) { 
		before 로직 ;
		Object result = pjp.proceed( ) ;
		after 로직 ;
		return result ;
	}
}

사용.
<aop:aspect ref="어드바이스id">
	<aop:around pointcut-ref="포인트컷id" method="어드바이스 메소드" />
</aop:aspect>




