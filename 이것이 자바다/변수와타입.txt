변수와 타입.


 # 변수 선언시 주의사항.

변수를 어떤 범위에서 사용될 것인지를 생각하고, 선언 위치를 결정해야 한다.
{ } 안에서 선언한 변수는 { } 안에서만 사용가능하다.


 # 데이터타입

모든 변수에는 타입(type)이 있으며, 타입에 따라 저장할 수 있는 값의 종류와 범위가 달라진다.
변수를 선언할 때 타입을 적어야하며, 변수를 사용하는 도중에 변경할 수 없다. ( 실행 중에는 변경 불가능 )


 # MSB

Most Significant bit : 최상위비트 ( 부호비트 )


 # 1의 보수, 2의 보수.

1의보수 : 모든 숫자를 0->1, 1->0으로 바꿔준다.
2의보수 : 1의보수 + 1.


 # overflow. ( 이 책에선 쓰레기 값이라고 표현 )

type의 표현 범위를 벗어나서 부호가 바뀌어서 표현되는 값.


 # char 타입.

자바는 모든 문자를 유니코드( Unicode )로 처리한다. 
유니코드는 2**16가지 data를 저장 할 수 있다. ( 2byte ).

ex ) char c =''; 	컴파일에러.
     char c = ' ';     중간에 한칸 띄어준다. ( 빈 문자 대입 )


 # 실수타입 특징.

bype가 같아도 정수타입에 비해 훨씬 큰 범위의 값을 저장할 수 있다.


 # 타입 변환.

1. 자동 타입 변환( Promotion ): 작은 크기를 가지는 타입이 큰 크기를 가지는 타입에 저장될 때 발생한다. 
    => char type은 음수가 저장될 수 없는 타입이라 같은 byte의 타입인 byte와 자동형변환 할 수 없다.

2. 강제 타입 변환( Casting )  : 큰 크기의 타입은 작은 크기의 타입으로 자동 타입 변환을 할 수 없다.
    => 작은 크기의 type의 표현 범위 안에 있는 값을 가진 큰 크기의 타입을 변환할때만 값의 변화가 없다.
        나머지의 경우에는 값이 달라진다. 


 # 강제 타입 변환에 주의사항.

1. 값손실이 일어나지 않도록 한다. ( if문을 값을 확인해준다 )
2. char type의 변환시 주의할 것. ( 음수가 존재하지 않는다 )
3. 정수에서 실수로 형변환시 근사값으로 변환되기 때문에 좀 더 정확한 값으로 변환하려면 double을 사용한다.


 # 자동 타입 변환에 주의사항.

1. char type의 변환시 주의할 것. ( 음수가 존재하지 않는다 )
2. 서로 다른 type의 피연산자의 연산을 진행할 경우, 자동으로 큰 타입으로 자동타입변환이 일어난다. ( 주의!! )
   ex ) int + double = double 반환. 



























