
 SOLID



  # SOLID

SRP Single Responsibility Principle.
- 단일 책임 원칙.
- 클래스 하나에 한 개의 책임을 가져야 한다.
- 클래스를 변경하는 이유는 단 한 개여야 한다.

OCP Open Closed Principle.
- 개방 폐쇄 원칙.
- 자신의 확장에는 열려있고, 주변 변화에는 닫혀있다.

LSP Liskov Substitution Principle.
- 리스코프 치환 법칙.
- 서브 타입은 언제나 자신의 기반 타입으로 교체할 수 있어야 한다.

IRP Interface Segregation Principle.
- 인터페이스 분리 법칙.
- 클라이언트는 자신이 사용하는 메소드에만 의존해야 한다.
- 인터페이스는 클라이언트 기준으로 분리해야 한다.

DIP Dependency Inversion Principle.
- 의존 역전 원칙.
- 고차원 모듈은 저차원 모듈을 의존하면 안 된다.
- 모든 모듈은 다른 추상화된 것에 의존해야 한다.
- 추상화된 것은 구체화 된 것을 의존하면 안 되고, 구체화 된 것이 추상화 된 것을 의존해야 된다.
- 자주 변경되는 구체 클래스에 의존하지 마라.
- 자신보다 변하기 쉬운 것에 의존하지 마라.

정리.
- SOLID는 객체지향 4대 특성을 제대로 활용하면서 나타난 방식이다.
- SOLID는 SoC Seperation of Conecern (관심사 분리) 하다.
- SOLID 원칙을 적용하면 소스 파일의 개수는 많아지는 경향이 있다.
























